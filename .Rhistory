geom_segment(aes(x=x,y=y,xend=x,yend=pred))
ggplot(data=spamtest)+
geom_density(aes(x=pred,color=spam))
ggplot(data=spamtest)+
geom_density(aes(x=pred,color=spam,linetype=spam))
library(ROCR)
eval=prediction(spamtest$pred,spamtest$spam)
perf=plot(performance(prediction.obj = eval,'fpr','tpr') )
plot(performance(prediction.obj = eval,'tpr','fpr') )
attributes(performance(eval,'auc'))
attributes(performance(eval,y.name='auc'))
attributes(performance(eval,measure = 'auc'))
plot(performance(prediction.obj = eval,measure.y='tpr','fpr') )
plot(performance(prediction.obj = eval,measure.y='tpr','fpr') )
plot(performance(prediction.obj = eval,measure.x='tpr','fpr') )
plot(performance(prediction.obj = eval,measure.x='tpr',meaure.y='fpr') )
plot(performance(prediction.obj = eval,measure='tpr','fpr') )
plot(performance(prediction.obj = eval,measure='tpr',measure='fpr') )
plot(performance(prediction.obj = eval,measure=c('tpr','fpr')) )
plot(performance(prediction.obj = eval,measure='tpr',x.measure = 'fpr') )
attributes(performance(eval,measure = 'auc'))
(performance(prediction.obj = eval,measure='tpr',x.measure = 'fpr') )
plot(performance(prediction.obj = eval,measure='tpr',x.measure = 'fpr') )
attributes(performance(eval,measure = 'auc'))
attributes(performance(eval,measure = 'auc'))$y.values
sum(ifelse(spamtest$spam=='spam',log(spmatest$pred),log(1-spamtest$pred)))
sum(ifelse(spamtest$spam=='spam',log(spamtest$pred),log(1-spamtest$pred)))
sum(ifelse(spamtest$spam=='spam',log(spamtest$pred),log(1-spamtest$pred)))/dim(spamtest)[[1]]
sum(ifelse(spamtest$spam=='spam',log(spamtest$pred),log(1-spamtest$pred)))/dim(spamtest)[1]
sum(spamtest$spam=='spam')
cm=table(spamtest$spam,spamtest$pred>0.5)
xm
cm
pnull=sum(ifelse(spamtest$spam=='spam',1,0))/dim(spamtest)[[1]]
pnull
sum(ifelse(spamtest$spam=='spam',1,0))*log(pnull)
sum(ifelse(spamtest$spam=='spam',0,1))*log(1-pnull)
sum(ifelse(spamtest$spam=='spam',log(pnull),0))
sum(ifelse(spamtest$spam=='spam',log(pnull),log(1-pnull)))
entropy=function(x){
xpos=x[x>0]
scaledx=xpos/sum(xpos)
sum(-scaledx*log2(scaledx))
}
entropy(cm)
entropy(table(spamtest$spam))
ab=table(spamtest$spam)
ab/sum(ab)
ab=table(spamtest$spam);ab
cm
cm/sum(cm)
cm/sum(cm,margin=1)
cm/sum(cm)
cm/sum(cm,margin=2)
conditional_entropy=function(x){
sum(x[,1])*entropy(x[,1])+sum(x[,2]*entropy(x[,2]))
}
conditional_entropy(cm)
conditional_entropy=function(x){
(sum(x[,1])*entropy(x[,1])+sum(x[,2]*entropy(x[,2])))/sum(x)
}
conditional_entropy(cm)
set.seed(32297)
d <- data.frame(x=runif(100),y=runif(100))
clus <- kmeans(d,centers=5)
d$clusters=clus$cluster
d$clusters
library(grDevices)
h=do.call(rbind,lapply(unique(d$clusters)),
function(c){
f=subset(d,clusters==c)
f[chull(f), ]
}
)
h=do.call(rbind,lapply(unique(d$clusters)),function(c){
f=subset(d,clusters==c)
f[chull(f), ]
}
)
h=do.call(rbind,lapply(unique(d$clusters)),function(c){
f=subset(d,clusters==c)
f[chull(f), ]  } )
h=do.call(rbind,lapply(unique(d$clusters)),function(c){
f=subset(d,clusters==c); f[chull(f), ]  } )
h <- do.call(rbind,
lapply(unique(clus$cluster),
function(c) { f <- subset(d,cluster==c); f[chull(f),]}))
h <- do.call(rbind,
lapply(unique(clus$cluster),
function(c) { f <- subset(d,clusters==c); f[chull(f),]}))
h=do.call(rbind,lapply(unique(clus$clusters)),function(c){
f=subset(d,clusters==c); f[chull(f), ]  } )
h=do.call(rbind,lapply(unique(clus$cluster)),function(c){
f=subset(d,clusters==c); f[chull(f), ]  } )
h=do.call(rbind,lapply(unique(clus$cluster),function(c){
f=subset(d,clusters==c); f[chull(f), ]  } ))
h
h=do.call(rbind,lapply(unique(clus$cluster),
function(c){
f=subset(d,clusters==c)
f[chull(f), ]
} ))
h
ggplot()+
geom_text(data=d,aes(x=x,y=y,label=clusters,color=cluster),size=3)+
geom_polygon(data=h,aes(x=x,y=y,group=clusters,fill=clusters),alpha=0.3,linetype=0)
ggplot()+
geom_text(data=d,aes(x=x,y=y,label=clusters,color=clusters),size=3)+
geom_polygon(data=h,aes(x=x,y=y,group=clusters,fill=clusters),alpha=0.3,linetype=0)
ggplot()+
geom_text(data=d,aes(x=x,y=y,label=clusters,color=clusters),size=3)+
geom_polygon(data=h,aes(x=x,y=y,group=clusters,fill=as.factor(clusters)),alpha=0.3,linetype=0)
ggplot()+
geom_text(data=d,aes(x=x,y=y,label=clusters,color=clusters),size=3)+
geom_polygon(data=h,aes(x=x,y=y,group=clusters,fill=as.factor(clusters)),alpha=0.3,linetype=0)+
theme(legend.position='none')
ggplot()+
#geom_text(data=d,aes(x=x,y=y,label=clusters,color=clusters),size=3)+
geom_polygon(data=h,aes(x=x,y=y,group=clusters,fill=as.factor(clusters)),alpha=0.3,linetype=0)+
theme(legend.position='none')
ggplot()+
#geom_text(data=d,aes(x=x,y=y,label=clusters,color=clusters),size=3)+
geom_polygon(data=h,aes(x=x,y=y,fill=as.factor(clusters)),alpha=0.3,linetype=0)+
theme(legend.position='none')
group=clusters,
ggplot()+
#geom_text(data=d,aes(x=x,y=y,label=clusters,color=clusters),size=3)+
geom_polygon(data=h,aes(x=x,y=y,group=clusters,fill=as.factor(clusters)),alpha=0.3,linetype=0)+
theme(legend.position='none')
ggplot()+
#geom_text(data=d,aes(x=x,y=y,label=clusters,color=clusters),size=3)+
geom_polygon(data=h,aes(x=x,y=y,group=clusters,fill=as.factor(clusters)),alpha=0.3,linetype=0)+
theme(legend.position='none')
ggplot()+
#geom_text(data=d,aes(x=x,y=y,label=clusters,color=clusters),size=3)+
geom_polygon(data=h,aes(x=x,y=y,fill=as.factor(clusters)),alpha=0.3,linetype=0)+
theme(legend.position='none')
ggplot()+
geom_text(data=d,aes(x=x,y=y,label=clusters,color=clusters),size=3)+
geom_polygon(data=h,aes(x=x,y=y,group=clusters,fill=as.factor(clusters)),alpha=0.3,linetype=0)
ggplot()+
geom_text(data=d,aes(x=x,y=y,label=clusters,color=as.factor(clusters)),size=3)+
geom_polygon(data=h,aes(x=x,y=y,group=clusters,fill=as.factor(clusters))+,alpha=0.3,linetype=0)
ggplot()+
geom_text(data=d,aes(x=x,y=y,label=clusters,color=as.factor(clusters)),size=3)+
geom_polygon(data=h,aes(x=x,y=y,group=clusters,fill=as.factor(clusters)),alpha=0.3,linetype=0)+
theme(legend.position='none')
table(d$clusters)
library(reshape2)
n=dim(d)[1]
n
n=dim(d)[[1]]
n
ca
ca=as.vector(outer(1:n,1:n,function(a,b) d[a,'clusters']))
ca
dim(ca)
length(ca)
cb=as.vector(outer(a=1:n,b=1:n,function(a,b) d[b,'clusters']))
cb=as.vector(outer(1:n,1:n,function(a,b) d[b,'clusters']))
cb
ca==cb
ca==cb
cb=(outer(1:n,1:n,function(a,b) d[b,'clusters']))
cb
dim(cb)
outer(1:n,1:n)
cb=(outer(1:n,1:n,function(a,b) d[b,'clusters']))
dim(cb)
ca==cb
cb=as.vector(outer(1:n,1:n,function(a,b) d[b,'clusters']))
cb
ca=(outer(1:n,1:n,function(a,b) d[a,'clusters']))
length(ca)
cb=(outer(1:n,1:n,function(a,b) d[b,'clusters']))
cb
ca==cb
cb=as.vector(outer(1:n,1:n,function(a,b) d[b,'clusters']))
cb
ca
ca=as.vector(outer(1:n,1:n,function(a,b) d[a,'clusters']))
length(ca)
cb=as.vector(outer(1:n,1:n,function(a,b) d[b,'clusters']))
cb
ca
outer(1:n,1:n)
cb
c=matrix(1:5,1:5,nrows=2)
c=matrix(1:5,1:5,nrow=2)
c
c=matrix(1:5,1:5,nrow=5)
c
c=matrix(1:5,1:5,nrow=5,ncol=5)
c
as.vector(c)
pairs <- data.frame(
ca=as.vector(outer(1:n,1:n,function(a,b) d[a,'clusters'])),
cb=as.vector(outer(1:n,1:n,function(a,b) d[b,'clusters'])),
)
pairs <- data.frame(
ca=as.vector(outer(1:n,1:n,function(a,b) d[a,'clusters'])),
cb=as.vector(outer(1:n,1:n,function(a,b) d[b,'clusters']))
)
pairs
pairs <- data.frame(
ca=as.vector(outer(1:n,1:n,function(a,b) d[a,'clusters'])),
cb=as.vector(outer(1:n,1:n,function(a,b) d[b,'clusters'])),
dist=as.vector(outer(1:n,1:n,function(a,b)
sqrt((d[a,'x']-d[b,'x'])^2 + (d[a,'y']-d[b,'y'])^2)))
)
pairs
dcast(pairs,ca~cb,value.var='dist',mean)
dcast(pairs,ca~cb,value.var=dist,mean)
'
'
'
dcast(pairs,ca~cb,value.var='dist',mean)
cb
dcast(pairs,ca~cb,value.var='dist',mean)
d=read.table('orange_small_train.data.gz',sep='\t',header = T, na.strings = c(NA,''))
str(d)
churn<- read.table('orange_small_train_churn.labels.txt',header=F,sep='\t')
churn
str(churn)
d$appetency <- appetency$v1
appetency <- read.table('orange_small_train_appetency.labels.txt', header=F,sep='\t')
d$appetency <- appetency$v1
rgroup=runif(dim(d)[[1]])
dtrainall <- subset(d,rgroup>0.1)
dtest <- subset(d,rgroup<=0.1)
outcomes <- c('churn','appentency','upselling')
d$rgroup=runif(dim(d)[[1]])
dtrainall <- subset(d,rgroup>0.1)
dtest <- subset(d,rgroup<=0.1)
outcomes <- c('churn','appentency','upselling')
vars <- setdiff(colnames(d),c(outcomes,'rgroup'))
vars
catvars <- vars[sapply(dtrain[ ,vars], class) %in% c('factor','')]
catvars <- vars[sapply(dtrainall[ ,vars], class) %in% c('factor','')]
catvars
catvars <- vars[sapply(dtrainall[ ,vars], class) %in% c('factor','character')]
catvars
numvars <- vars[sapply(dtrainall[ ,vars], class) %in% c('integer','numeric')]
numvars
str(d)
rm(c('d','churn','appetency','upselling'))
rm(list=c('d','churn','appetency','upselling'))
rm(list=c('d','churn','appetency','upselling'))
useforcal <- rbinom(n=dim(dtrainall)[[1]],ssize = 1, prob=0.1)
useforcal <- rbinom(n=dim(dtrainall)[[1]],size = 1, prob=0.1)
useforcal
useforcal <- rbinom(n=dim(dtrainall)[[1]],size = 1, prob=0.1)>0
useforcal
dcal <- subset(dtrainall,useforcal)
dim(dcal)
dim(dtrainall)
dtrain <- subset(dtrainall,!useforcal)
dim(dtrain)
table222 <- table(var222=dtrain[,'var222'],outcome=dtrain[, outcome],useNA = 'ifany')
table222 <- table(var222=dtrain[,'var218'],outcome=dtrain[, outcome],useNA = 'ifany')
table222 <- table(var222=dtrain[,'Var222'],outcome=dtrain[, outcome],useNA = 'ifany')
table222 <- table(var222=dtrainall[,'Var222'],outcome=dtrain[, outcome],useNA = 'ifany')
table222 <- table(var222=dtrain[,"Var222"],outcome=dtrain[, outcome],useNA = 'ifany')
outcome <- 'churn'
pos <- '1'
table222 <- table(var222=dtrain[,"Var222"],outcome=dtrain[, outcome],useNA = 'ifany')
table222 <- table(var222=dtrain[,"Var222"],outcome=dtrain[, outcome],useNA = 'ifany')
outcome <- "churn"
table222 <- table(var222=dtrain[,"Var222"],outcome=dtrain[, outcome],useNA = 'ifany')
table222 <- table(var222=dtrain[,"Var222"],outcome=dtrain[ ,outcome],useNA = 'ifany')
'churn' %in% colnames(dtrain)
colnames(dtrain)
d=read.table('orange_small_train.data.gz',sep='\t',header = T, na.strings = c(NA,''))
str(d)
churn<- read.table('orange_small_train_churn.labels.txt',header=F,sep='\t')
d$churn <- churn$V1
appetency <- read.table('orange_small_train_appetency.labels.txt', header=F,sep='\t')
d$appetency <- appetency$v1
upselling <- read.table('orange_small_train_upselling.labels.txt',header=F,sep='\t')
d$upselling <- upselling$V1
set.seed(729375)
d$rgroup=runif(dim(d)[[1]])
dtrainall <- subset(d,rgroup>0.1)
dtest <- subset(d,rgroup<=0.1)
outcomes <- c('churn','appentency','upselling')
vars <- setdiff(colnames(d),c(outcomes,'rgroup'))
vars
colnames(dtrainall)
d$appetency <- appetency$v1
upselling <- read.table('orange_small_train_upselling.labels.txt',header=F,sep='\t')
d$upselling <- upselling$V1
set.seed(729375)
d$rgroup=runif(dim(d)[[1]])
dtrainall <- subset(d,rgroup>0.1)
dtest <- subset(d,rgroup<=0.1)
outcomes <- c('churn','appentency','upselling')
colnames(dtrainall)
vars <- setdiff(colnames(d),c(outcomes,'rgroup'))
vars
catvars <- vars[sapply(dtrainall[ ,vars], class) %in% c('factor','character')]
catvars
numvars <- vars[sapply(dtrainall[ ,vars], class) %in% c('integer','numeric')]
numvars
rm(list=c('d','churn','appetency','upselling'))
outcome <- "churn"
pos <- '1'
useforcal <- rbinom(n=dim(dtrainall)[[1]],size = 1, prob=0.1)>0
useforcal
dcal <- subset(dtrainall,useforcal)
dim(dcal)
dim(dtrainall)
dtrain <- subset(dtrainall,!useforcal)
dim(dtrain)
table222 <- table(var222=dtrain[,"Var222"],outcome=dtrain[ ,outcome],useNA = 'ifany')
'churn' %in% colnames(dtrain)
colnames(dtrain)
d$appetency <- appetency$v1
upselling <- read.table('orange_small_train_upselling.labels.txt',header=F,sep='\t')
d$upselling <- upselling$V1
set.seed(729375)
d=read.table('orange_small_train.data.gz',sep='\t',header = T, na.strings = c(NA,''))
str(d)
churn<- read.table('orange_small_train_churn.labels.txt',header=F,sep='\t')
d$churn <- churn$V1
appetency <- read.table('orange_small_train_appetency.labels.txt', header=F,sep='\t')
d$appetency <- appetency$v1
upselling <- read.table('orange_small_train_upselling.labels.txt',header=F,sep='\t')
d$upselling <- upselling$V1
set.seed(729375)
d$rgroup=runif(dim(d)[[1]])
dtrainall <- subset(d,rgroup>0.1)
dtest <- subset(d,rgroup<=0.1)
outcomes <- c('churn','appentency','upselling')
colnames(dtrainall)
colnames(d)
appetency <- read.table('orange_small_train_appetency.labels.txt', header=F,sep='\t')
d$appetency <- appetency$V1
upselling <- read.table('orange_small_train_upselling.labels.txt',header=F,sep='\t')
d$upselling <- upselling$V1
colnames(d)
d=read.table('orange_small_train.data.gz',sep='\t',header = T, na.strings = c(NA,''))
str(d)
churn<- read.table('orange_small_train_churn.labels.txt',header=F,sep='\t')
d$churn <- churn$V1
appetency <- read.table('orange_small_train_appetency.labels.txt', header=F,sep='\t')
d$appetency <- appetency$V1
upselling <- read.table('orange_small_train_upselling.labels.txt',header=F,sep='\t')
d$upselling <- upselling$V1
set.seed(729375)
d$rgroup=runif(dim(d)[[1]])
dtrainall <- subset(d,rgroup>0.1)
dtest <- subset(d,rgroup<=0.1)
outcomes <- c('churn','appentency','upselling')
colnames(d)
colnames(dtrainall)
vars <- setdiff(colnames(d),c(outcomes,'rgroup'))
vars
catvars <- vars[sapply(dtrainall[ ,vars], class) %in% c('factor','character')]
catvars
numvars <- vars[sapply(dtrainall[ ,vars], class) %in% c('integer','numeric')]
numvars
rm(list=c('d','churn','appetency','upselling'))
vars <- setdiff(colnames(d),c(outcomes,'rgroup'))
outcomes <- c('churn','appetency','upselling')
colnames(dtrainall)
vars <- setdiff(colnames(d),c(outcomes,'rgroup'))
d=read.table('orange_small_train.data.gz',sep='\t',header = T, na.strings = c(NA,''))
str(d)
churn<- read.table('orange_small_train_churn.labels.txt',header=F,sep='\t')
d$churn <- churn$V1
appetency <- read.table('orange_small_train_appetency.labels.txt', header=F,sep='\t')
d$appetency <- appetency$V1
upselling <- read.table('orange_small_train_upselling.labels.txt',header=F,sep='\t')
d$upselling <- upselling$V1
set.seed(729375)
d$rgroup=runif(dim(d)[[1]])
dtrainall <- subset(d,rgroup>0.1)
dtest <- subset(d,rgroup<=0.1)
outcomes <- c('churn','appetency','upselling')
colnames(dtrainall)
vars <- setdiff(colnames(d),c(outcomes,'rgroup'))
vars
catvars <- vars[sapply(dtrainall[ ,vars], class) %in% c('factor','character')]
catvars
numvars <- vars[sapply(dtrainall[ ,vars], class) %in% c('integer','numeric')]
numvars
rm(list=c('d','churn','appetency','upselling'))
outcome <- "churn"
pos <- '1'
useforcal <- rbinom(n=dim(dtrainall)[[1]],size = 1, prob=0.1)>0
useforcal
dcal <- subset(dtrainall,useforcal)
dim(dcal)
dim(dtrainall)
dtrain <- subset(dtrainall,!useforcal)
dim(dtrain)
table222 <- table(var222=dtrain[,"Var222"],outcome=dtrain[ ,outcome],useNA = 'ifany')
'churn' %in% colnames(dtrain)
colnames(dtrain)
table222
table218 <- table(var218=dtrain[,"Var218"],outcome=dtrain[ ,outcome],useNA = 'ifany')
'churn' %in% colnames(dtrain)
colnames(dtrain)
table222
table218
table218[1]
table218[2]
table218[3]
table218[4]
print(table218[,2]/(table218[,1]+table218[,2]))
table218[pos]
table218[1]
table218
table218[,1]
table218[,'1']
colSums(table218)
makepred <- function(outcol,varcol,appcol){
pPos <- sum(outcol==pos)/length(outcol)
natab <- table(as.factor(outcol[is.na(varcol)]))
pPoswna=(natab/sum(natab))[pos]
vtab <- table(as.factor(outcol),varcol)
pPoswv <- vtab[pos,]/colSums(vtabs)
pred <- pPoswv[appcol]
pred[is.na(appcol)]=pPoswna
pred[is.na(pred)] <- pPos
}
for (v in catvars) {
pi <- paste('pred',v,sep='')
dtrain[,pi] <- mkpred(dtrain[,outcome],dtrain[,v],dtrain[,v])
dcal[,pi] <- mkpred(dtrain[,outcome],dtrain[,v],dcal[,v])
dtest[,pi] <- nkpred(dtrain[,outcome],dtrain[,v],dtest[,v])
}
for (v in catvars) {
pi <- paste('pred',v,sep='')
dtrain[,pi] <- makepred(dtrain[,outcome],dtrain[,v],dtrain[,v])
dcal[,pi] <- makepred(dtrain[,outcome],dtrain[,v],dcal[,v])
dtest[,pi] <- makepred(dtrain[,outcome],dtrain[,v],dtest[,v])
}
makepred <- function(outcol,varcol,appcol){
pPos <- sum(outcol==pos)/length(outcol)
natab <- table(as.factor(outcol[is.na(varcol)]))
pPoswna=(natab/sum(natab))[pos]
vtab <- table(as.factor(outcol),varcol)
pPoswv <- vtab[pos,]/colSums(vtab)
pred <- pPoswv[appcol]
pred[is.na(appcol)]=pPoswna
pred[is.na(pred)] <- pPos
}
for (v in catvars) {
pi <- paste('pred',v,sep='')
dtrain[,pi] <- makepred(dtrain[,outcome],dtrain[,v],dtrain[,v])
dcal[,pi] <- makepred(dtrain[,outcome],dtrain[,v],dcal[,v])
dtest[,pi] <- makepred(dtrain[,outcome],dtrain[,v],dtest[,v])
}
makepred <- function(outcol,varcol,appcol){
pPos <- sum(outcol==pos)/length(outcol)
natab <- table(as.factor(outcol[is.na(varcol)]))
pPoswna=(natab/sum(natab))[pos]
vtab <- table(as.factor(outcol),varcol)
pPoswv <- vtab[pos,]/colSums(vtab)
pred <- pPoswv[appcol]
pred[is.na(appcol)]=pPoswna
pred[is.na(pred)] <- pPos
pred
}
for (v in catvars) {
pi <- paste('pred',v,sep='')
dtrain[,pi] <- makepred(dtrain[,outcome],dtrain[,v],dtrain[,v])
dcal[,pi] <- makepred(dtrain[,outcome],dtrain[,v],dcal[,v])
dtest[,pi] <- makepred(dtrain[,outcome],dtrain[,v],dtest[,v])
}
calcAUC <- function(predcol,outcol){
perf <- performance(prediction(predcol,outcol==pos),measure = 'auc')
as.numeric(perf$y.values)
}
for (v in catvars){
pi <- paste('pred',v,sep='')
auctrain <- calcAUC(dtrain[,pi],dtrain[,outcome])
if (auctrain>0.8){
auccal <- calcAUC(dcal[,pi],dcal[,outcome])
print(sprintf('%s trainAUC: %4.3f  CalibrtionAUC: %4.3f',dtrain[,pi],auctrain,auccal))
}
}
library(ROCR)
for (v in catvars){
pi <- paste('pred',v,sep='')
auctrain <- calcAUC(dtrain[,pi],dtrain[,outcome])
if (auctrain>0.8){
auccal <- calcAUC(dcal[,pi],dcal[,outcome])
print(sprintf('%s trainAUC: %4.3f  CalibrtionAUC: %4.3f',dtrain[,pi],auctrain,auccal))
}
}
calcAUC <- function(predcol,outcol){
perf <- performance(prediction(predcol,outcol==pos),measure = 'auc')
as.numeric(perf@y.values)
}
for (v in catvars){
pi <- paste('pred',v,sep='')
auctrain <- calcAUC(dtrain[,pi],dtrain[,outcome])
if (auctrain>0.8){
auccal <- calcAUC(dcal[,pi],dcal[,outcome])
print(sprintf('%s trainAUC: %4.3f  CalibrtionAUC: %4.3f',dtrain[,pi],auctrain,auccal))
}
}
for (v in catvars){
pi <- paste('pred',v,sep='')
auctrain <- calcAUC(dtrain[,pi],dtrain[,outcome])
if (auctrain>0.8){
auccal <- calcAUC(dcal[,pi],dcal[,outcome])
print(sprintf('%s trainAUC: %4.3f  CalibrtionAUC: %4.3f',pi,auctrain,auccal))
}
}
