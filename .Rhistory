library(ggplot2)
custdata=read.tsv('custdata.tsv')
custdata=read.tsv(file.choose())
custdata=read.table(file.choose())
custdata=read.table('custdata.tsv')
custdata=read.table('custdata.tsv',header = T)
custdata=read.table('custdata.tsv',header = T)
custdata=read.table('custdata.tsv',header = T,sep=' ')
custdata=read.table('custdata.tsv',header = T,sep='    ')
custdata=read.table('custdata.tsv',header = T)
custdata=read.csv('custdata.tsv',header = T)
str(custdat)
str(custdata)
custdata=read.csv('custdata.tsv',header = T,sep=' ')
str(custdata)
custdata=read.csv('custdata.txt',header = T,sep=' ')
custdata=read.csv('custdata1.txt',header = T,sep=' ')
custdata=read.csv('custdata.tsv',header = T,stringsAsFactors = T)
str(custdata)
custdata=read.csv('custdata.tsv',header = T,stringsAsFactors = F)
str(custdata)
custdata=read.csv('custdata.tsv',header = T)
str(custdata)
custdata=read.table('custdata.tsv',header = T,stringsAsFactors = T)
custdata=read.table('custdata.tsv',header = F,stringsAsFactors = T)
custdata=read.table('custdata.tsv',header = F)
custdata=read.table('custdata.tsv',header = T)
custdata=read.table('custdata.tsv',header = T,sep='  ')
custdata=read.table('custdata.tsv',header = T,sep='  ')
custdata=read.table('custdata.tsv',header = T)
custdata=read.table('custdata.txt',header = T)
custdata=read.table('custdata.txt',header = T,sep='\t')
str(custdata)
custdata=read.table('custdata.tsv',header = T,sep='\t')
str(custdata)
summary(custdata)
ggplot(custdata)+geom_histogram(aes(x=age))
ggplot(custdata)+geom_histogram(aes(x=age),binwidth = 5)
ggplot(custdata)+geom_histogram(aes(x=age),binwidth = 5, fill='gray')
ggplot(custdata)+geom_density(aes(x=income))+
scale_x_continuous(labels = dollars)
ggplot(custdata)+geom_density(aes(x=income))+
scale_x_continuous(labels = dollar)
ggplot(custdata)+geom_density(aes(x=income))
ggplot(custdata)+geom_density(aes(x=income)) +
scale_x_continuous(labels = dollar)
ggplot(custdata)+geom_density(aes(x=income)) +
scale_x_continuous(labels=dollar)
scale_x_continuous(labels='dollar)
ggplot(custdata)+geom_density(aes(x=income)) +
scale_x_continuous(labels='dollar')
ggplot(custdata)+geom_density(aes(x=income)) +
scale_x_continuous(labels=dollar)
ggplot(custdata)+geom_density(aes(x=income)) +
scale_x_continuous(label=dollar)
ggplot(custdata)+geom_density(aes(x=income)) +
scale_x_continuous(label=dollar)
ggplot(custdata)+geom_density(aes(x=income)) +
scale_x_continuous(labels=dollar)
ggplot(custdata)+geom_density(aes(x=income)) +
scale_x_continuous(labels=c(1,6,9))
ggplot(custdata)+geom_density(aes(x=income)) +
scale_x_continuous(labels='dollar')
library(scales)
ggplot(custdata)+geom_density(aes(x=income)) +
scale_x_continuous(labels='dollar')
ggplot(custdata)+geom_density(aes(x=income)) +
scale_x_continuous(labels=dollar)
ggplot(custdata)+geom_density(aes(x=income)) +
scale_x_log10(labels=dollar,breaks=c(5,10,15))
ggplot(custdata)+geom_density(aes(x=income)) +
scale_x_log10(labels=dollar,breaks=c(100,1000,10000,100000))
ggplot(custdata)+geom_density(aes(x=income)) +
scale_x_log10(labels=dollar,breaks=c(100,1000,10000,100000))+
annotation_logticks()
ggplot(custdata)+geom_density(aes(x=income)) +
scale_x_log10(labels=dollar,breaks=c(100,1000,10000,100000))
ggplot(custdata)+geom_density(aes(x=income)) +
scale_x_log10(labels=dollar,breaks=c(100,1000,10000,100000))+
annotation_logticks(sides='bt')
ggplot(custdata)+geom_bar(aes(x=marital.stat))
ggplot(custdata)+geom_bar(aes(x=marital.stat),fill='gray')
ggplot(custdata)+geom_bar(aes(x=marital.stat),fill='darkgray')
ggplot(custdata)+geom_bar(aes(x=marital.stat),fill='darkgray')+
coord_flip()+
theme(axis.text.y = element_text(size=rel(0.8)))
ggplot(custdata)+geom_bar(aes(x=state.of.res),fill='darkgray')+
coord_flip()+
theme(axis.text.y = element_text(size=rel(0.8)))
statesum=table(custdata$state.of.res)
statesum
statesf=as.data.frame(statesum)
statesf
colnames(statesf)=c('states.of.res','count')
summary(statesf)
statesf=transform(statesf,states.of.res=reorder(states.of.res,count))
statesf
statef=transform(statesf,states.of.res=reorder(states.of.res,count))
statef
summary(statef)
summary(statesf)
statesum=table(custdata$state.of.res)
statesum
statesf=as.data.frame(statesum)
statesf
colnames(statesf)=c('states.of.res','count')
summary(statesf)
ggplot(statef)+ geom_bar(aes(x=states.of.res,y=count),fill='darkgray')+
coord_flip()+
theme(axis.text.y=element_text(size=rel(0.8)))
ggplot(statef)+ geom_bar(aes(x=states.of.res,y=count),stat='identiti',fill='darkgray')+
coord_flip()+
theme(axis.text.y=element_text(size=rel(0.8)))
ggplot(statef)+ geom_bar(aes(x=states.of.res,y=count),stat='identity',fill='darkgray')+
coord_flip()+
theme(axis.text.y=element_text(size=rel(0.8)))
ggplot(custdata)+geom_point(aes(x=age,y=income))
ggplot(custdata)+geom_point(aes(x=age,y=income))+
ylim(0,200000)
ggplot(custdata)+geom_point(aes(x=age,y=income))+
ylim(0,200000) +stat_smooth(method='lm')
ggplot(custdata)+geom_point(aes(x=age,y=income))+
ylim(0,200000) +stat_smooth(aes(x=age,y=income),method='lm')
ggplot(custdata)+geom_point(aes(x=age,y=income))+
ylim(0,200000) +geom_smooth(aes(x=age,y=income))
custdata2=subset(custdata$income>0 & custdata$age>0 & custdata$age<100)
custdata2=subset(custdata(custdata$income>0 & custdata$age>0 & custdata$age<100))
custdata2=subset(custdata,(custdata$income>0 & custdata$age>0 & custdata$age<100))
summary(custdata)
summary(custdata2)
ggplot(custdata2)+geom_point(aes(x=age,y=income))+
ylim(0,200000)
ggplot(custdata2)+geom_point(aes(x=age,y=income))+
ylim(0,200000) +stat_smooth(aes(x=age,y=income),method='lm')
ggplot(custdata2)+geom_point(aes(x=age,y=income))+
ylim(0,200000) +geom_smooth(aes(x=age,y=income))
ggplot(custdata2,aes(x=age,y=as.numeric(health.ins)))+
geom_point(position = position_jitter())+
geom_smooth()
ggplot(custdata2,aes(x=age,y=as.numeric(health.ins)))+
geom_point(position = position_jitter(w=0.05,h=0.05))+
geom_smooth()
ggplot(custdata2,aes(x=age,y=income))+
geom_hex(binwidth=c(5,10000))+
geom_smooth()
ggplot(custdata2,aes(x=age,y=income))+
geom_hex(binwidth=c(5,1000))+
geom_smooth()
ggplot(custdata2,aes(x=age,y=income))+
geom_hex(binwidth=c(5,10000))+
geom_smooth()
ggplot(custdata2,aes(x=age,y=income))+
geom_hex(binwidth=c(5,10000))+ ylim(0,200000)
geom_smooth(color='white',se=F)
ggplot(custdata2,aes(x=age,y=income))+
geom_hex(binwidth=c(5,10000))+ ylim(0,200000)+
geom_smooth(color='white',se=F)
ggplot(custdata2)+
geom_bar(aes(x=marital.stat,fill=health.ins))
ggplot(custdata2)+
geom_bar(aes(x=marital.stat,fill=health.ins,position='dodge'))
ggplot(custdata2)+
geom_bar(aes(x=marital.stat,fill=health.ins),position='dodge')
ggplot(custdata2)+
geom_bar(aes(x=marital.stat,fill=health.ins),position='fill')
ggplot(custdata2)+
geom_bar(aes(x=marital.stat,fill=health.ins),position='fill') +
geom_point(aes(y=0.5),size=0.9,alpha=0.4,position = position_jitter)
ggplot(custdata2)+
geom_bar(aes(x=marital.stat,fill=health.ins),position='fill') +
geom_point(aes(y=-0.5),size=0.9,alpha=0.4,position = position_jitter(h=0.1))
ggplot(custdata2)+
geom_bar(aes(x=marital.stat,fill=health.ins),position='fill') +
geom_point(aes(x=marital.stat,y=-0.5),size=0.9,alpha=0.4,position = position_jitter(h=0.1))
ggplot(custdata2)+
geom_bar(aes(x=marital.stat,fill=health.ins),position='fill') +
geom_point(aes(x=marital.stat,y=-0.05),size=0.9,alpha=0.4,position = position_jitter(h=0.1))
ggplot(custdata2)+
geom_bar(aes(x=marital.stat,fill=health.ins),position='fill') +
geom_point(aes(x=marital.stat,y=-0.05),size=0.9,alpha=0.4,position = position_jitter(h=0.01))
ggplot(custdata2)+
geom_bar(aes(x=marital.stat,fill=health.ins),position='fill') +
geom_point(aes(x=marital.stat,y=-0.05),size=0.7,alpha=0.4,position = position_jitter(h=0.01))
ggplot(custdata2)+
geom_bar(aes(x=marital.stat,fill=health.ins),position='fill') +
geom_point(aes(x=marital.stat,y=-0.05),size=0.7,alpha=0.3,position = position_jitter(h=0.01))
ggplot(custdata2)+
geom_bar(aes(x=marital.stat,fill=health.ins),position='fill') +
geom_point(aes(x=marital.stat,y=-0.05),size=0.2,alpha=0.3,position = position_jitter(h=0.01))
ggplot(custdata2)+
geom_bar(aes(x=marital.stat,fill=health.ins),position='fill') +
geom_point(aes(x=marital.stat,y=-0.05),size=0.8,alpha=0.3,position = position_jitter(h=0.01))
ggplot(custdata2)+
geom_bar(aes(x=marital.stat,fill=health.ins),position='fill') +
geom_point(aes(x=marital.stat,y=-0.05),size=0.8,alpha=0.3)
ggplot(custdata2)+
geom_bar(aes(x=marital.stat,fill=health.ins),position='fill') +
geom_point(aes(x=marital.stat,y=-0.05),size=0.8,alpha=0.3,position = position_jitter(h=0.1))
ggplot(custdata2)+
geom_bar(aes(x=marital.stat,fill=health.ins),position='fill') +
geom_point(aes(x=marital.stat,y=-0.05),size=0.8,alpha=0.3,position = position_jitter(h=0.01))
ggplot(custdata2)+
geom_bar(aes(x=health.ins,,fill=marital.stat),position='dodge')
ggplot(custdata2)+
geom_bar(aes(x=housing.type,,fill=marital.stat),position='dodge')
ggplot(custdata2)+
geom_bar(aes(x=housing.type,,fill=marital.stat),position='dodge') +
theme(axis.text.x=element_text(angle=90,hjust=1))
ggplot(custdata2)+
geom_bar(aes(x=housing.type,,fill=marital.stat),position='dodge') +
theme(axis.text.x=element_text(angle=60,hjust=1))
ggplot(custdata2)+
geom_bar(aes(x=housing.type,,fill=marital.stat),position='dodge') +
theme(axis.text.x=element_text(angle=30,hjust=1))
ggplot(custdata2)+
geom_bar(aes(x=housing.type,,fill=marital.stat),position='dodge') +
theme(axis.text.x=element_text(angle=30,hjust=5))
ggplot(custdata2)+
geom_bar(aes(x=housing.type,,fill=marital.stat),position='dodge') +
theme(axis.text.x=element_text(angle=30,hjust=0.01))
ggplot(custdata2)+
geom_bar(aes(x=housing.type,,fill=marital.stat),position='dodge') +
theme(axis.text.x=element_text(angle=30,hjust=01))
ggplot(custdata2)+
geom_bar(aes(x=marital.stat),position = 'dodge')+
facet_wrap(~housing.type)
ggplot(custdata2)+
geom_bar(aes(x=marital.stat),position = 'dodge')+
facet_wrap(~housing.type,scales = 'free_y')
ggplot(custdata2)+
geom_bar(aes(x=marital.stat),position = 'dodge')+
facet_wrap(~housing.type,scales = 'free_y')+
theme(axis.text.x=element_text(angle=45,hjust=1))
ggplot(custdata2)+
geom_bar(aes(x=marital.stat),position = 'dodge')+
facet_wrap(housing.type~,scales = 'free_y')+
theme(axis.text.x=element_text(angle=45,hjust=1))
ggplot(custdata2)+
geom_bar(aes(x=marital.stat),position = 'dodge')+
facet_wrap(housing.type~,scales = 'free_y')+
theme(axis.text.x=element_text(angle=45,hjust=1))
ggplot(custdata2)+
geom_bar(aes(x=marital.stat),position = 'dodge')+
facet_wrap(housing.type~.,scales = 'free_y')+
theme(axis.text.x=element_text(angle=45,hjust=1))
ggplot(custdata2)+
geom_bar(aes(x=marital.stat),position = 'dodge')+
facet_wrap(~housing.type,scales = 'free_y')+
theme(axis.text.x=element_text(angle=45,hjust=1))
library(ggplot2)
library(scales)
custdata=read.table('custdata.tsv',sep='\t',header=T)
summary(custdata)
summary(is.na(custdata))
summary(custdata[is.na(custdata$housing.type),c('recent.move','num.vehicles')])
custdata$employed.fix=ifelse(is.na(custdata$is.employed),'missing',
custdata$employed.fix=ifelse(is.na(custdata$is.employed),'missing',
custdata$employed.fix=ifelse(is.na(custdata$is.employed),'missing',ifelse(custdata$is.employed==T,'employed','un-employed')
custdata$employed.fix=ifelse(is.na(custdata$is.employed),'missing',ifelse(custdata$is.employed==T,'employed','un-employed')
custdata$employed.fix=ifelse(is.na(custdata$is.employed),'missing',
ifelse(custdata$is.employed==T,'employed','un-employed'))
summary(custdata$employed.fix)
custdata$employed.fix=as.factor(ifelse(is.na(custdata$is.employed),'missing',
ifelse(custdata$is.employed==T,'employed','un-employed')))
summary(custdata$employed.fix)
# Missing values in numeric data
summary(custdata$income)
custdata$income=ifelse(custdata$income<0,0,custdata$income)
# Missing values in numeric data
summary(custdata$income)
custdata=read.table('custdata.tsv',sep='\t',header=T)
# Missing values in numeric data
summary(custdata$income)
custdata$income=ifelse(custdata$income<0,NA,custdata$income)
# Missing values in numeric data
summary(custdata$income)
mean_income=mean(custdata$income,na.rm = T)
mean_income
custdata$income.fix=ifelse(is.na(custdata$income),mean_income,custdata$income)
summary(custdata$income.fix)
breaks=c(0,10000,50000,100000,1000000)
income_group=cut(custdata$income,breaks=breaks,include.lowest = T)
summary(income_group)
Income_gp=ifelse(is.na(income_group),'no_income',income_group)
Income_gp=as.factor(ifelse(is.na(income_group),'no_income',income_group))
summary(Income_gp)
income_group=as.character((income_group))
Income_gp=as.factor(ifelse(is.na(income_group),'no_income',income_group))
summary(Income_gp)
# Data Transformation
summary(medianincome)
# Data Transformation
median_income=ave(custdata$income,custdata$state.of.res,FUN=mean)
summary(median_income)
(median_income)
# Data Transformation
median_income=aggregate(custdata$income,custdata$state.of.res,FUN=median)
# Data Transformation
median_income=aggregate(income~state.of.res,custdata,FUN=median)
(median_income)
summary(medianincome)
summary(median_income)
custdata=merge(custdata.median_income,by.x='state.of.res',by.y='income')
custdata=merge(custdata,median_income,by.x='state.of.res',by.y='income')
summary(custdata)
custdata=merge(custdata,median_income,by.x='state.of.res',by.y='State')
summary(median_income)
summary(custdata)
custdata=merge(custdata,median_income,by.x='state.of.res',by.y='State')
summary(custdata)
custdata=read.table('custdata.tsv',sep='\t',header=T)
custdata=merge(custdata,median_income,by.x='state.of.res',by.y='State')
colnames(median_income)=c('State','median.income')
summary(median_income)
custdata=merge(custdata,median_income,by.x='state.of.res',by.y='State')
summary(custdata)
custdata$income.norm=with(custdata,income/median.income)
summary(custdata$income.norm)
summary(custdata$age)
mean_age=mean(custdata$age)
custdata$age.norm=custdata$age/mean_age
summary(custdata$age.norm)
summary(scale(custdata$age))
sign(54)
sign(-54)
sign(-0)
sign(-3)
sign(3)
sign(-3)
ifelse(abs(x)<=1,0,sign(x)*log10(x))
signedlog10=function(x){
ifelse(abs(x)<=1,0,sign(x)*log10(abs(x)))
}
custdata$gp=runif(dim(custdata)[1])
test_set=subset(custdata,custdata$gp<=0.1)
dim(test_set)
library(ggplot2)
spamD=read.table('spamD.tsv',sep='\t')
library(ggplot2)
spamD=read.table('spamD.tsv',sep='\t')
spamD=read.table(file.choose(),sep='\t')
spamD=read.table('spamD',sep='\t')
spamD=read.table('spamD.txt',sep='\t')
summary(spamD)
spamD=read.table('spamD.txt',sep='\t',header=T)
summary(spamD)
str(spamD)
fix(spamD)
spamtrain=subset(spamD,rgroup>10)
spamtest=subset(spamD,rgroup<=10)
spamVars=setdiff(spamD,c('rgroup','spam'))
spamVars=setdiff(colnames(spamD),c('rgroup','spam'))
spamFormula=as.formula(paste('spam=="spam"',paste(spamVars,collapse = '+'),sep = '~'))
spamFormula
spamModel=glm(spamFormula,family = binomial(link='logit'),data=spamtrain)
spamtrain$pred=predict(spamModel,newdata = spamtrain)
spamtest$pred=predict(spamModel,newdata=spamtest)
spamtest$pred
spamtrain$pred=predict(spamModel,newdata = spamtrain,type='response')
spamtest$pred=predict(spamModel,newdata=spamtest,type='response')
spamtest$pred
print(with(spamtest,table(spam,pred>0.5)))
sample=spamtest[c(24,35,1,356,26),c('spam','pred')]
sample
d=data.frame(y=(1:10)^2,x=1:10)
model=lm(y~x, data=d)
d$pred=predict(model,d)
ggplot(d)+geom_point(aes(x=x,y=y))+
geom_line(aes(x=x,y=pred),color='blue')+
geom_segment(x=x,y=y,xend=x,yend=pred)
ggplot(d)+geom_point(aes(x=x,y=y))+
geom_line(aes(x=x,y=pred),color='blue')+
geom_segment(x=x,y=y,xend=x,yend=pred)
ggplot(d)+geom_point(aes(x=x,y=y))+
geom_line(aes(x=x,y=pred),color='blue')+
geom_segment(aes(x=x,y=y,xend=x,yend=pred))
